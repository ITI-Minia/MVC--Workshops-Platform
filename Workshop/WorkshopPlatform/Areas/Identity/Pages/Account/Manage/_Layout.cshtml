@{
    if (ViewData.TryGetValue("ParentLayout", out var parentLayout))
    {
        Layout = (string)parentLayout;
    }
    else
    {
        Layout = "/Areas/Identity/Pages/_Layout.cshtml";
    }
}
@inject SignInManager<IdentityUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<div class="setting-layout">
    <div id="page-top">
        <div class="row mb-5">
            <div class="col-12 col-md-3 col-md-setting mt-4">
                <ul class="navbar-nav sidebar accordion" id="accordionSidebar">
                    <li class="nav-item">
                        <a class="nav-link  @ManageNavPages.IndexNavClass(ViewContext)" asp-page="./Index">
                            <i class="fas fa-fw fa-user-cog"></i>
                            <div style="display:inline">General</div>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link  @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">
                            <i class="fas fa-fw fa-envelope"></i>
                            <div style="display:inline">Email</div>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link  @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">
                            <i class="fas fa-fw fa-lock"></i>
                            <div style="display:inline">Password</div>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link  @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">
                            <i class="fas fa-fw fa-car"></i>
                            <div style="display:inline">Location & Car Data</div>
                        </a>
                    </li>
                    @if (hasExternalLogins)
                    {
                        <li class="nav-item">
                            <a class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">
                                <i class="fas fa-fw fa-sign-in-alt"></i>
                                <div style="display:inline">External logins</div>
                            </a>
                        </li>
                    }
                    <li class="nav-item">
                        <a class="nav-link  @ManageNavPages.DeletePersonalDataNavClass(ViewContext)" id="delete-personal-data" asp-page="./DeletePersonalData">
                            <i class="fas fa-fw fa-trash-alt"></i>
                            <div style="display:inline">Delete account</div>
                        </a>
                    </li>
                </ul>
            </div>
            <div class="col-12 col-md-9 mt-4 pt-md-0">
                <div class="card setting-card">
                    <div class="card-body p-5">
                        @RenderBody()
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*@await RenderSectionAsync("Scripts", required: false)*@

@section Scripts {
    @RenderSection("Scripts", required: false)

    <script>
        var url = location.href.split('settings')[1];
        if (url == "/deleteAccount") {
            $('#delete-personal-data').addClass('active');
            $('#personal-data').removeClass('active');
        }
    </script>
}